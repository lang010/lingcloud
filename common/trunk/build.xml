<project basedir="." default="build" name="lingcloud-common">

	<property name="common.dist.dir" value="dist" />
	<property name="common.src.dir" value="src" />
	<property name="common.extensions.dir" value="extensions" />

	<property name="target" value="1.5" />
	<property name="source" value="1.5" />
	<property name="javac.optimize" value="on" />

	<property name="project.ocl.title" value="LingCloud Molva Open Cloud Lease" />
	<property name="project.ocl.version" value="0.9.1" />
	<property name="project.xmm.title" value="LingCloud Molva eXtendible Machine Manager" />
	<property name="project.xmm.version" value="0.9.1" />
	<property name="project.portal.title" value="LingCloud Molva Portal" />
	<property name="project.portal.version" value="0.9.1" />
	<property name="project.test.title" value="LingCloud Molva Test" />
	<property name="project.test.version" value="0.9.1" />
	<property name="project.vendor.name" value="LingCloud Team" />

	<property name="common.3rdparty.jre.file" value="jre-6u25-linux-x64.bin" />
	<property name="common.3rdparty.jre.dir" value="jre1.6.0_25" />
	<property name="common.3rdparty.tomcat.file" value="apache-tomcat-7.0.12.tar.gz" />
	<property name="common.3rdparty.tomcat.dir" value="apache-tomcat-7.0.12" />
	<property name="common.3rdparty.axis.file" value="axis-bin-1_4.tar.gz" />
	<property name="common.3rdparty.axis.dir" value="axis-1_4" />
	<property name="common.3rdparty.emma.enabled" value="true" />

	<path id="common.lingcloud.classpath">
		<fileset dir="${common.dist.dir}/lib" includes="**/*.jar" />
		<fileset dir="lib/3rdparty" includes="**/*.jar" />
	</path>

	<path id="common.3rdparty.emma.lib">
		<pathelement location="bin/3rdparty/emma/emma.jar" />
		<pathelement location="bin/3rdparty/emma/emma_ant.jar" />
	</path>

	<path id="common.lingcloud.instrument.source">
		<pathelement location="${common.src.dir}/ocl" />
		<pathelement location="${common.src.dir}/xmm" />
	</path>

	<path id="common.lingcloud.instrument.classpath">
		<pathelement location="${common.dist.dir}/lib/lingcloud-molva-ocl-${project.ocl.version}.jar" />
		<pathelement location="${common.dist.dir}/lib/lingcloud-molva-xmm-${project.xmm.version}.jar" />
	</path>

	<target name="set-debug-on" if="debug">
		<property name="javac.debug" value="on" />
	</target>
	
	<target name="set-debug-off" unless="debug">
		<property name="javac.debug" value="off" />
	</target>

	<target name="init" depends="set-debug-on,set-debug-off">
		<mkdir dir="${common.dist.dir}" />
		<mkdir dir="${common.dist.dir}/lib" />
		<mkdir dir="${common.dist.dir}/bin" />
		<mkdir dir="${common.dist.dir}/logs" />
		<mkdir dir="${common.dist.dir}/build" />
		<mkdir dir="${common.dist.dir}/build/ocl" />
		<mkdir dir="${common.dist.dir}/build/xmm" />
		<mkdir dir="${common.dist.dir}/build/portal" />
		<mkdir dir="${common.dist.dir}/build/test" />
		<tstamp>
			<format property="project.timestamp" pattern="yyyy-MM-dd'T'HH:mm:ss" />
		</tstamp>
		<echo>javac debug is "${javac.debug}"</echo>
	</target>

	<target name="clean">
		<delete dir="${common.dist.dir}" />
	</target>

	<target name="clean-conf">
		<!-- delete files created from .tmpl when do configure.sh -->
		<delete file="conf/naming-hibernate.cfg.xml" />
		<delete file="conf/molva.conf" />
		<delete file="bin/scripts/configure/naming-conf/naming.sql" />
		<delete file="bin/scripts/configure/opennebula-conf/oned.conf" />
		<delete file="bin/scripts/configure/opennebula-conf/tm_clone.sh" />
		<subant target="clean-conf">
			<dirset dir="extensions" includes="*" />
		</subant>
	</target>

	<target name="clean-build">
		<delete dir="${common.dist.dir}/build" />
	</target>

	<target name="build" depends="clean,extract-bin,build-subprojects,assemble-webapps,
		build-assemble-extensions,debug,clean-build" />

	<target name="build-subprojects" depends="build-ocl,build-xmm,
		build-portal" />

	<target name="assemble-webapps" depends="assemble-xmm-axis,assemble-portal" />

	<target name="build-ocl" depends="init">
		<javac srcdir="${common.src.dir}/ocl" destdir="${common.dist.dir}/build/ocl" 
			classpathref="common.lingcloud.classpath" debug="${javac.debug}" optimize="${javac.optimize}" 
			source="${source}" target="${target}" />
		<jar destfile="${common.dist.dir}/lib/lingcloud-molva-ocl-${project.ocl.version}.jar" 
			basedir="${common.dist.dir}/build/ocl" includes="**/*.class">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Built-On" value="${os.name} "/>
				<section name="lingcloud-molva-ocl-${project.ocl.version}.jar">
					<attribute name="Specification-Title" value="${project.ocl.title}"/>
					<attribute name="Specification-Version" value="${project.ocl.version}"/>
					<attribute name="Specification-Vendor" value="${project.vendor.name}"/>
					<attribute name="Implementation-Title" value="${project.ocl.title}"/>
					<attribute name="Implementation-Version" value="${project.timestamp}"/>
					<attribute name="Implementation-Vendor" value="${project.vendor.name}"/>
				</section>
			</manifest>
		</jar>
	</target>

	<target name="build-xmm" depends="init">
		<javac srcdir="${common.src.dir}/xmm" destdir="${common.dist.dir}/build/xmm" 
			classpathref="common.lingcloud.classpath" debug="${javac.debug}" optimize="${javac.optimize}" 
			source="${source}" target="${target}" />
		<jar destfile="${common.dist.dir}/lib/lingcloud-molva-xmm-${project.xmm.version}.jar" 
			basedir="${common.dist.dir}/build/xmm" includes="**/*.class">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Built-On" value="${os.name} "/>
				<section name="lingcloud-molva-xmm-${project.xmm.version}.jar">
					<attribute name="Specification-Title" value="${project.xmm.title}"/>
					<attribute name="Specification-Version" value="${project.xmm.version}"/>
					<attribute name="Specification-Vendor" value="${project.vendor.name}"/>
					<attribute name="Implementation-Title" value="${project.xmm.title}"/>
					<attribute name="Implementation-Version" value="${project.timestamp}"/>
					<attribute name="Implementation-Vendor" value="${project.vendor.name}"/>
				</section>
			</manifest>
		</jar>
	</target>

	<target name="build-portal" depends="init,extract-bin,build-ocl,build-xmm">
		<javac srcdir="${common.src.dir}/contrib/portal" destdir="${common.dist.dir}/build/portal" 
			classpathref="common.lingcloud.classpath" debug="${javac.debug}" optimize="${javac.optimize}" 
			source="${source}" target="${target}" />
		<copy todir="${common.dist.dir}/build/portal">
			<fileset dir="${common.src.dir}/contrib/portal" includes="**/*.properties" />
		</copy>
		<jar destfile="${common.dist.dir}/lib/lingcloud-molva-portal-${project.portal.version}.jar" 
			basedir="${common.dist.dir}/build/portal" includes="**/*.class,**/*.properties">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Built-On" value="${os.name} "/>
				<section name="lingcloud-molva-portal-${project.portal.version}.jar">
					<attribute name="Specification-Title" value="${project.portal.title}"/>
					<attribute name="Specification-Version" value="${project.portal.version}"/>
					<attribute name="Specification-Vendor" value="${project.vendor.name}"/>
					<attribute name="Implementation-Title" value="${project.portal.title}"/>
					<attribute name="Implementation-Version" value="${project.timestamp}"/>
					<attribute name="Implementation-Vendor" value="${project.vendor.name}"/>
				</section>
			</manifest>
		</jar>
	</target>
	
	<target name="build-test" depends="init,build-ocl,build-xmm">
		<javac srcdir="${common.src.dir}/test" destdir="${common.dist.dir}/build/test" 
			classpathref="common.lingcloud.classpath" debug="${javac.debug}" optimize="${javac.optimize}" 
			source="${source}" target="${target}" />
		<jar destfile="${common.dist.dir}/lib/lingcloud-molva-test-${project.test.version}.jar" 
			basedir="${common.dist.dir}/build/test" includes="**/*.class">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Built-On" value="${os.name} "/>
				<section name="lingcloud-molva-test-${project.test.version}.jar">
					<attribute name="Specification-Title" value="${project.test.title}"/>
					<attribute name="Specification-Version" value="${project.test.version}"/>
					<attribute name="Specification-Vendor" value="${project.vendor.name}"/>
					<attribute name="Implementation-Title" value="${project.test.title}"/>
					<attribute name="Implementation-Version" value="${project.timestamp}"/>
					<attribute name="Implementation-Vendor" value="${project.vendor.name}"/>
				</section>
			</manifest>
		</jar>
	</target>
	
	<target name="build-assemble-extensions" depends="init,build-ocl,build-xmm" if="with-extensions">
		<echo>Extensions are enabled.</echo>
		<!-- call sub-builds -->
		<subant target="">
			<property name="extensions.build.dir" 
				value="${basedir}/${common.dist.dir}/build/extensions" />
			<property name="extensions.classpath" refid="common.lingcloud.classpath" />
			<property name="javac.debug" value="${javac.debug}" />
			<property name="javac.optimize" value="${javac.optimize}" />
			<dirset dir="extensions" includes="*" />
		</subant>
		<!-- list extensions -->
		<foreach target="list-extensions" param="extension.dir">
			<path>
				<dirset dir="${common.extensions.dir}" includes="*"/>
			</path>
		</foreach>
	</target>
	
	<target name="list-extensions">
		<basename property="extension.name" file="${extension.dir}"/>
		<!-- copy jars -->
		<copy todir="${common.dist.dir}/bin/tomcat/webapps/lingcloud/WEB-INF/lib">
			<fileset dir="${extension.dir}/lib" includes="*.jar" />
			<fileset dir="${extension.dir}/lib/3rdparty" includes="*.jar"/>
		</copy>
		<!-- copy webapps -->
		<copy todir="${common.dist.dir}/bin/tomcat/webapps">
			<fileset dir="${extension.dir}/src/webapps" includes="**/*" />
		</copy>
		<!-- add extension struts configuration -->
		<replace file="${common.dist.dir}/bin/tomcat/webapps/lingcloud/WEB-INF/web.xml" 
			token="/WEB-INF/struts-config.xml," 
			value="/WEB-INF/struts-config.xml,/WEB-INF/struts-config-${extension.name}.xml," />
		<!-- copy extension properties -->
		<copy todir="${common.dist.dir}/bin/tomcat/webapps/lingcloud/WEB-INF/extensions">
			<fileset dir="${extension.dir}" includes="${extension.name}.properties" />
		</copy>
	</target>

	<target name="assemble-xmm-axis" depends="extract-bin,build-xmm">
		<!-- wsdd -->
		<copy todir="${common.dist.dir}/bin/tomcat/webapps/axis/WEB-INF">
			<fileset dir="conf" includes="server-config.wsdd" />
		</copy>
		<!-- jar -->
		<copy todir="${common.dist.dir}/bin/tomcat/webapps/axis/WEB-INF/lib">
			<fileset dir="${common.dist.dir}/lib" includes="lingcloud-molva-ocl-*.jar,
				lingcloud-molva-xmm-*.jar" />
			<fileset dir="lib/3rdparty">
				<include name="antlr-*.jar" />
				<include name="asm-attrs*.jar" />
				<include name="asm*.jar" />
				<include name="c3p0-*.jar" />
				<include name="cglib-nodep-*.jar" />
				<include name="commons-beanutils*.jar" />
				<include name="commons-codec-*.jar" />
				<include name="commons-collections-*.jar" />
				<include name="commons-validator*.jar" />
				<include name="dom4j-*.jar" />
				<include name="hibernate*.jar" />
				<include name="jdom*.jar" />
				<include name="jta*.jar" />
				<include name="mysql-connector-java-*-bin.jar" />
				<include name="one-oca-*.jar" />
				<include name="ws-commons-util-*.jar" />
				<include name="xmlrpc-client-*.jar" />
				<include name="xmlrpc-common-*.jar" />
				<include name="xstream-*.jar" />
				<include name="xwork-*.jar" />
			</fileset>
		</copy>
		<!-- log4j.properties -->
		<copy todir="${common.dist.dir}/bin/tomcat/webapps/axis/WEB-INF/classes">
			<fileset dir="conf" includes="log4j.properties" />
		</copy>
	</target>

	<target name="assemble-portal" depends="extract-bin,build-portal">
		<!-- lingcloud dir -->
		<copy todir="${common.dist.dir}/bin/tomcat/webapps/lingcloud">
			<fileset dir="${common.src.dir}/webapps/lingcloud" />
		</copy>
		<!-- version file -->
		<echo file="${common.dist.dir}/bin/tomcat/webapps/lingcloud/WEB-INF/version.txt" 
			append="false" message="version=${project.portal.version} (${project.timestamp})" />
		<!-- jar -->
		<copy todir="${common.dist.dir}/bin/tomcat/webapps/lingcloud/WEB-INF/lib">
			<fileset dir="${common.dist.dir}/lib" includes="lingcloud-molva-ocl-*.jar,
				lingcloud-molva-xmm-*.jar,lingcloud-molva-portal-*.jar" />
			<fileset dir="lib/3rdparty">
				<include name="ant.jar" />
				<include name="antlr-*.jar" />
				<include name="asm*.jar" />
				<include name="axis.jar" />
				<include name="bcprov-jdk15.jar" />
				<include name="cog-jglobus.jar" />
				<include name="c3p0-*.jar" />
				<include name="cglib-*.jar" />
				<include name="cglib-nodep-*.jar" />
				<include name="commons-beanutils.jar" />
				<include name="commons-cli-*.jar" />
				<include name="commons-codec-*.jar" />
				<include name="commons-collections-*.jar" />
				<include name="commons-digester.jar" />
				<include name="commons-discovery.jar" />
				<include name="commons-fileupload-*.jar" />
				<include name="commons-httpclient-*.jar" />
				<include name="commons-validator.jar" />
				<include name="commons-io-*.jar" />
				<include name="commons-logging-*.jar" />
				<include name="commons-lang-*.jar" />
				<include name="dom4j-*.jar" />
				<include name="freemarker-*.jar" />
				<include name="jdom.jar" />
				<include name="hibernate3.jar" />
				<include name="jakarta-oro-*.jar" />
				<include name="jaxrpc.jar" />
				<include name="jsonplugin-*.jar" />
				<include name="JPam-1.1.jar" />
				<include name="jta.jar" />
				<include name="junit-*.jar" />
				<include name="mysql-connector-java-*.jar" />
				<include name="log4j-*.jar" />
				<include name="ognl-*.jar" />
				<include name="spring.jar" />
				<include name="struts.jar" />
				<include name="struts2-core-*.jar" />
				<include name="struts2-spring-plugin-*.jar" />
				<include name="wsdl4j-*.jar" />
				<include name="xmlrpc-*-patched.jar" />
				<include name="xmlrpc-client-*.jar" />
				<include name="xstream-*.jar" />
				<include name="xwork-*.jar" />
			</fileset>
		</copy>
		<!-- log4j.properties -->
		<copy todir="${common.dist.dir}/bin/tomcat/webapps/lingcloud/WEB-INF/classes">
			<fileset dir="conf" includes="log4j.properties" />
		</copy>
	</target>

	<target name="extract-bin" depends="init">
		<!-- jre -->
		<copy todir="${common.dist.dir}/bin">
			<fileset dir="bin/3rdparty/jre" includes="${common.3rdparty.jre.file}" />
		</copy>
		<exec executable="sh" dir="${common.dist.dir}/bin">
			<arg value="${common.3rdparty.jre.file}" />
		</exec>
		<symlink overwrite="true" 
			link="${common.dist.dir}/bin/jre" resource="${common.3rdparty.jre.dir}" />
		<delete file="${common.dist.dir}/bin/${common.3rdparty.jre.file}" />
		<!-- jpam -->
		<copy todir="${common.dist.dir}/bin/jre/lib/amd64/server">
			<fileset dir="bin/3rdparty/jpam" includes="*.so" />
		</copy>
		<!-- tomcat -->
		<copy todir="${common.dist.dir}/bin">
			<fileset dir="bin/3rdparty/tomcat" includes="${common.3rdparty.tomcat.file}" />
		</copy>
		<exec executable="tar" dir="${common.dist.dir}/bin">
			<arg value="xzf"/>
			<arg value="${common.3rdparty.tomcat.file}"/>
		</exec>
		<symlink overwrite="true" 
			link="${common.dist.dir}/bin/tomcat" resource="${common.3rdparty.tomcat.dir}" />
		<delete file="${common.dist.dir}/bin/${common.3rdparty.tomcat.file}" />
		<!-- axis -->
		<copy todir="${common.dist.dir}/bin">
			<fileset dir="bin/3rdparty/axis" includes="${common.3rdparty.axis.file}" />
		</copy>
		<exec executable="tar" dir="${common.dist.dir}/bin">
			<arg value="xzf"/>
			<arg value="${common.3rdparty.axis.file}"/>
		</exec>
		<move todir="${common.dist.dir}/bin/tomcat/webapps/axis">
			<fileset dir="${common.dist.dir}/bin/${common.3rdparty.axis.dir}/webapps/axis" />
		</move>
		<delete file="${common.dist.dir}/bin/${common.3rdparty.axis.file}" />
		<delete dir="${common.dist.dir}/bin/${common.3rdparty.axis.dir}" />
	</target>

	<target name="test-init">
		<delete dir="${common.dist.dir}/test/reports" />
		<delete dir="${common.dist.dir}/test/coverage" />
		<mkdir dir="${common.dist.dir}/test/reports/html" />
		<mkdir dir="${common.dist.dir}/test/coverage" />
		<mkdir dir="${common.dist.dir}/build/instrument" />
		<property name="debug" value="true" />
	</target>
	
	<target name="test-junit" depends="test-init,build-test,test-instrument">
		<junit fork="true" forkmode="once" printsummary="withOutAndErr"
			errorproperty="test.error" showoutput="on">
			<jvmarg value="-Demma.coverage.out.file=${common.dist.dir}/test/coverage/metadata.emma" />
			<jvmarg value="-Demma.coverage.out.merge=true" />
			<sysproperty key="lingcloud.home" value="${basedir}" />
			<classpath location="${common.dist.dir}/build/instrument" />
			<classpath refid="common.lingcloud.classpath" />
			<classpath refid="common.3rdparty.emma.lib" />
			<formatter type="xml" />
			<batchtest todir="${common.dist.dir}/test/reports">
				<fileset dir="${common.src.dir}/test">
					<include name="**/server/*TestSuite.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="test-junit-report" depends="test-junit">
		<junitreport todir="${common.dist.dir}/test/reports">
			<fileset dir="${common.dist.dir}/test/reports">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${common.dist.dir}/test/reports/html" />
		</junitreport>
	</target>	
	
	<taskdef resource="emma_ant.properties" classpathref="common.3rdparty.emma.lib" />

	<target name="test-coverage-report" depends="test-junit">
		<emma enabled="${common.3rdparty.emma.enabled}">
			<report sourcepathref="common.lingcloud.instrument.source" 
				sort="+block,+name,+method,+class" 
				metrics="method:70,block:80,line:80,class:100">
				<fileset dir="${common.dist.dir}/test/coverage">
					<include name="*.emma" />
				</fileset>
				<html outfile="${common.dist.dir}/test/coverage/index.html" 
					depth="method" columns="name,class,method,block,line" />
			</report>
		</emma>
	</target>
	
	<target name="test-instrument" depends="test-init,build-ocl,build-xmm">
		<emma enabled="${common.3rdparty.emma.enabled}">
			<instr instrpathref="common.lingcloud.instrument.classpath" 
				destdir="${common.dist.dir}/build/instrument" 
				metadatafile="${common.dist.dir}/test/coverage/metadata.emma" 
				merge="true">
			</instr>
		</emma>
	</target>

	<target name="test" depends="test-init,test-junit,test-junit-report,
		test-coverage-report,clean-build"/>

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="bin/3rdparty/ant/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>

	<target name="debug" depends="extract-bin" if="debug">
		<echo>Debug mode is on.</echo>
		<loadfile property="startup.sh.text" srcFile="${common.dist.dir}/bin/tomcat/bin/startup.sh" />
		<propertyregex property="temp.file" input="${startup.sh.text}" regexp='" start ' replace='" jpda start ' />
		<echo file="${common.dist.dir}/bin/tomcat/bin/startup.sh">${temp.file}</echo>
		<chmod file="${common.dist.dir}/bin/tomcat/bin/startup.sh" perm="ugo+x"/>
	</target>

</project>
